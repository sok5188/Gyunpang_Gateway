spring:
  kafka:
    bootstrap-servers: { kafka-server }
  cloud:
    gateway:
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins:
              - 'https://sirong.shop'
            allow-credentials: true
            allowedHeaders: '*'
            allowedMethods:
              - PUT
              - GET
              - POST
              - DELETE
              - OPTIONS
      routes:
        - id: gateway-service
          uri: http://localhost:8080
          predicates:
            Path=/gateway/**

        - id: open-service
          uri: lb://backend-service
          predicates:
            - Path=/open/**

        - id: backend-route
          uri: lb://backend-service
          predicates:
            - Path=/**
          filters:
            - name: CustomAuthFilter
              args:
                headerName: Authorization
                granted: Bearer
    loadbalancer:
      configurations: health-check
    discovery:
      client:
        simple:
          instances:
            backend-service:
              - secure: false
                port: 80
                host: address_be1
                serviceId: backend-service
                instanceId: backend-service-1
              - secure: false
                port: 80
                host: address_be2
                serviceId: backend-service
                instanceId: backend-service-2

server:
  port: 8080
logging:
  level:
    com: DEBUG

kafka:
  topic:
    log: GatewayAPI

jwt:
  secret: jwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecretjwtsecret

api:
  backend-scheme: https
  backend-host: api.sirong.shop